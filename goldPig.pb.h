// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goldPig.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_goldPig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_goldPig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_goldPig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_goldPig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_goldPig_2eproto;
namespace GoldPigProto {
class GoldPigDetail;
class GoldPigDetailDefaultTypeInternal;
extern GoldPigDetailDefaultTypeInternal _GoldPigDetail_default_instance_;
class KnockGoldPigResp;
class KnockGoldPigRespDefaultTypeInternal;
extern KnockGoldPigRespDefaultTypeInternal _KnockGoldPigResp_default_instance_;
class PurchaseGoldPigResp;
class PurchaseGoldPigRespDefaultTypeInternal;
extern PurchaseGoldPigRespDefaultTypeInternal _PurchaseGoldPigResp_default_instance_;
class QueryGoldPigDetailResp;
class QueryGoldPigDetailRespDefaultTypeInternal;
extern QueryGoldPigDetailRespDefaultTypeInternal _QueryGoldPigDetailResp_default_instance_;
}  // namespace GoldPigProto
PROTOBUF_NAMESPACE_OPEN
template<> ::GoldPigProto::GoldPigDetail* Arena::CreateMaybeMessage<::GoldPigProto::GoldPigDetail>(Arena*);
template<> ::GoldPigProto::KnockGoldPigResp* Arena::CreateMaybeMessage<::GoldPigProto::KnockGoldPigResp>(Arena*);
template<> ::GoldPigProto::PurchaseGoldPigResp* Arena::CreateMaybeMessage<::GoldPigProto::PurchaseGoldPigResp>(Arena*);
template<> ::GoldPigProto::QueryGoldPigDetailResp* Arena::CreateMaybeMessage<::GoldPigProto::QueryGoldPigDetailResp>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace GoldPigProto {

// ===================================================================

class GoldPigDetail :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GoldPigProto.GoldPigDetail) */ {
 public:
  GoldPigDetail();
  virtual ~GoldPigDetail();

  GoldPigDetail(const GoldPigDetail& from);
  GoldPigDetail(GoldPigDetail&& from) noexcept
    : GoldPigDetail() {
    *this = ::std::move(from);
  }

  inline GoldPigDetail& operator=(const GoldPigDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoldPigDetail& operator=(GoldPigDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GoldPigDetail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GoldPigDetail* internal_default_instance() {
    return reinterpret_cast<const GoldPigDetail*>(
               &_GoldPigDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GoldPigDetail& a, GoldPigDetail& b) {
    a.Swap(&b);
  }
  inline void Swap(GoldPigDetail* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GoldPigDetail* New() const final {
    return CreateMaybeMessage<GoldPigDetail>(nullptr);
  }

  GoldPigDetail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GoldPigDetail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GoldPigDetail& from);
  void MergeFrom(const GoldPigDetail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GoldPigDetail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GoldPigProto.GoldPigDetail";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_goldPig_2eproto);
    return ::descriptor_table_goldPig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProductIdFieldNumber = 8,
    kAlreadyOpenFieldNumber = 2,
    kAlreadyPayFieldNumber = 3,
    kLevelFieldNumber = 4,
    kGoldFieldNumber = 5,
    kStorageFieldNumber = 6,
    kPurchaseAmountFieldNumber = 7,
  };
  // string product_id = 8;
  void clear_product_id();
  const std::string& product_id() const;
  void set_product_id(const std::string& value);
  void set_product_id(std::string&& value);
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  std::string* mutable_product_id();
  std::string* release_product_id();
  void set_allocated_product_id(std::string* product_id);

  // bool alreadyOpen = 2;
  void clear_alreadyopen();
  bool alreadyopen() const;
  void set_alreadyopen(bool value);

  // bool alreadyPay = 3;
  void clear_alreadypay();
  bool alreadypay() const;
  void set_alreadypay(bool value);

  // sint32 level = 4;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);

  // sint32 gold = 5;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int32 value);

  // sint32 storage = 6;
  void clear_storage();
  ::PROTOBUF_NAMESPACE_ID::int32 storage() const;
  void set_storage(::PROTOBUF_NAMESPACE_ID::int32 value);

  // double purchaseAmount = 7;
  void clear_purchaseamount();
  double purchaseamount() const;
  void set_purchaseamount(double value);

  // @@protoc_insertion_point(class_scope:GoldPigProto.GoldPigDetail)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr product_id_;
  bool alreadyopen_;
  bool alreadypay_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 storage_;
  double purchaseamount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_goldPig_2eproto;
};
// -------------------------------------------------------------------

class QueryGoldPigDetailResp :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GoldPigProto.QueryGoldPigDetailResp) */ {
 public:
  QueryGoldPigDetailResp();
  virtual ~QueryGoldPigDetailResp();

  QueryGoldPigDetailResp(const QueryGoldPigDetailResp& from);
  QueryGoldPigDetailResp(QueryGoldPigDetailResp&& from) noexcept
    : QueryGoldPigDetailResp() {
    *this = ::std::move(from);
  }

  inline QueryGoldPigDetailResp& operator=(const QueryGoldPigDetailResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGoldPigDetailResp& operator=(QueryGoldPigDetailResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryGoldPigDetailResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryGoldPigDetailResp* internal_default_instance() {
    return reinterpret_cast<const QueryGoldPigDetailResp*>(
               &_QueryGoldPigDetailResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryGoldPigDetailResp& a, QueryGoldPigDetailResp& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryGoldPigDetailResp* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryGoldPigDetailResp* New() const final {
    return CreateMaybeMessage<QueryGoldPigDetailResp>(nullptr);
  }

  QueryGoldPigDetailResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryGoldPigDetailResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryGoldPigDetailResp& from);
  void MergeFrom(const QueryGoldPigDetailResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryGoldPigDetailResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GoldPigProto.QueryGoldPigDetailResp";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_goldPig_2eproto);
    return ::descriptor_table_goldPig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // .GoldPigProto.GoldPigDetail data = 2;
  bool has_data() const;
  void clear_data();
  const ::GoldPigProto::GoldPigDetail& data() const;
  ::GoldPigProto::GoldPigDetail* release_data();
  ::GoldPigProto::GoldPigDetail* mutable_data();
  void set_allocated_data(::GoldPigProto::GoldPigDetail* data);

  // sint32 resultCode = 1;
  void clear_resultcode();
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode() const;
  void set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GoldPigProto.QueryGoldPigDetailResp)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::GoldPigProto::GoldPigDetail* data_;
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_goldPig_2eproto;
};
// -------------------------------------------------------------------

class PurchaseGoldPigResp :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GoldPigProto.PurchaseGoldPigResp) */ {
 public:
  PurchaseGoldPigResp();
  virtual ~PurchaseGoldPigResp();

  PurchaseGoldPigResp(const PurchaseGoldPigResp& from);
  PurchaseGoldPigResp(PurchaseGoldPigResp&& from) noexcept
    : PurchaseGoldPigResp() {
    *this = ::std::move(from);
  }

  inline PurchaseGoldPigResp& operator=(const PurchaseGoldPigResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline PurchaseGoldPigResp& operator=(PurchaseGoldPigResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PurchaseGoldPigResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PurchaseGoldPigResp* internal_default_instance() {
    return reinterpret_cast<const PurchaseGoldPigResp*>(
               &_PurchaseGoldPigResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PurchaseGoldPigResp& a, PurchaseGoldPigResp& b) {
    a.Swap(&b);
  }
  inline void Swap(PurchaseGoldPigResp* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PurchaseGoldPigResp* New() const final {
    return CreateMaybeMessage<PurchaseGoldPigResp>(nullptr);
  }

  PurchaseGoldPigResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PurchaseGoldPigResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PurchaseGoldPigResp& from);
  void MergeFrom(const PurchaseGoldPigResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PurchaseGoldPigResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GoldPigProto.PurchaseGoldPigResp";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_goldPig_2eproto);
    return ::descriptor_table_goldPig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultCodeFieldNumber = 1,
  };
  // sint32 resultCode = 1;
  void clear_resultcode();
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode() const;
  void set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GoldPigProto.PurchaseGoldPigResp)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_goldPig_2eproto;
};
// -------------------------------------------------------------------

class KnockGoldPigResp :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GoldPigProto.KnockGoldPigResp) */ {
 public:
  KnockGoldPigResp();
  virtual ~KnockGoldPigResp();

  KnockGoldPigResp(const KnockGoldPigResp& from);
  KnockGoldPigResp(KnockGoldPigResp&& from) noexcept
    : KnockGoldPigResp() {
    *this = ::std::move(from);
  }

  inline KnockGoldPigResp& operator=(const KnockGoldPigResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline KnockGoldPigResp& operator=(KnockGoldPigResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KnockGoldPigResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KnockGoldPigResp* internal_default_instance() {
    return reinterpret_cast<const KnockGoldPigResp*>(
               &_KnockGoldPigResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(KnockGoldPigResp& a, KnockGoldPigResp& b) {
    a.Swap(&b);
  }
  inline void Swap(KnockGoldPigResp* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KnockGoldPigResp* New() const final {
    return CreateMaybeMessage<KnockGoldPigResp>(nullptr);
  }

  KnockGoldPigResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KnockGoldPigResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KnockGoldPigResp& from);
  void MergeFrom(const KnockGoldPigResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KnockGoldPigResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GoldPigProto.KnockGoldPigResp";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_goldPig_2eproto);
    return ::descriptor_table_goldPig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // .GoldPigProto.GoldPigDetail data = 2;
  bool has_data() const;
  void clear_data();
  const ::GoldPigProto::GoldPigDetail& data() const;
  ::GoldPigProto::GoldPigDetail* release_data();
  ::GoldPigProto::GoldPigDetail* mutable_data();
  void set_allocated_data(::GoldPigProto::GoldPigDetail* data);

  // sint32 resultCode = 1;
  void clear_resultcode();
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode() const;
  void set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GoldPigProto.KnockGoldPigResp)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::GoldPigProto::GoldPigDetail* data_;
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_goldPig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GoldPigDetail

// bool alreadyOpen = 2;
inline void GoldPigDetail::clear_alreadyopen() {
  alreadyopen_ = false;
}
inline bool GoldPigDetail::alreadyopen() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.alreadyOpen)
  return alreadyopen_;
}
inline void GoldPigDetail::set_alreadyopen(bool value) {
  
  alreadyopen_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.alreadyOpen)
}

// bool alreadyPay = 3;
inline void GoldPigDetail::clear_alreadypay() {
  alreadypay_ = false;
}
inline bool GoldPigDetail::alreadypay() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.alreadyPay)
  return alreadypay_;
}
inline void GoldPigDetail::set_alreadypay(bool value) {
  
  alreadypay_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.alreadyPay)
}

// sint32 level = 4;
inline void GoldPigDetail::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoldPigDetail::level() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.level)
  return level_;
}
inline void GoldPigDetail::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.level)
}

// sint32 gold = 5;
inline void GoldPigDetail::clear_gold() {
  gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoldPigDetail::gold() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.gold)
  return gold_;
}
inline void GoldPigDetail::set_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.gold)
}

// sint32 storage = 6;
inline void GoldPigDetail::clear_storage() {
  storage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GoldPigDetail::storage() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.storage)
  return storage_;
}
inline void GoldPigDetail::set_storage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  storage_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.storage)
}

// double purchaseAmount = 7;
inline void GoldPigDetail::clear_purchaseamount() {
  purchaseamount_ = 0;
}
inline double GoldPigDetail::purchaseamount() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.purchaseAmount)
  return purchaseamount_;
}
inline void GoldPigDetail::set_purchaseamount(double value) {
  
  purchaseamount_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.purchaseAmount)
}

// string product_id = 8;
inline void GoldPigDetail::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GoldPigDetail::product_id() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.GoldPigDetail.product_id)
  return product_id_.GetNoArena();
}
inline void GoldPigDetail::set_product_id(const std::string& value) {
  
  product_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GoldPigProto.GoldPigDetail.product_id)
}
inline void GoldPigDetail::set_product_id(std::string&& value) {
  
  product_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GoldPigProto.GoldPigDetail.product_id)
}
inline void GoldPigDetail::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  product_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GoldPigProto.GoldPigDetail.product_id)
}
inline void GoldPigDetail::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GoldPigProto.GoldPigDetail.product_id)
}
inline std::string* GoldPigDetail::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:GoldPigProto.GoldPigDetail.product_id)
  return product_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GoldPigDetail::release_product_id() {
  // @@protoc_insertion_point(field_release:GoldPigProto.GoldPigDetail.product_id)
  
  return product_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GoldPigDetail::set_allocated_product_id(std::string* product_id) {
  if (product_id != nullptr) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:GoldPigProto.GoldPigDetail.product_id)
}

// -------------------------------------------------------------------

// QueryGoldPigDetailResp

// sint32 resultCode = 1;
inline void QueryGoldPigDetailResp::clear_resultcode() {
  resultcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 QueryGoldPigDetailResp::resultcode() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.QueryGoldPigDetailResp.resultCode)
  return resultcode_;
}
inline void QueryGoldPigDetailResp::set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.QueryGoldPigDetailResp.resultCode)
}

// .GoldPigProto.GoldPigDetail data = 2;
inline bool QueryGoldPigDetailResp::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline void QueryGoldPigDetailResp::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::GoldPigProto::GoldPigDetail& QueryGoldPigDetailResp::data() const {
  const ::GoldPigProto::GoldPigDetail* p = data_;
  // @@protoc_insertion_point(field_get:GoldPigProto.QueryGoldPigDetailResp.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::GoldPigProto::GoldPigDetail*>(
      &::GoldPigProto::_GoldPigDetail_default_instance_);
}
inline ::GoldPigProto::GoldPigDetail* QueryGoldPigDetailResp::release_data() {
  // @@protoc_insertion_point(field_release:GoldPigProto.QueryGoldPigDetailResp.data)
  
  ::GoldPigProto::GoldPigDetail* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::GoldPigProto::GoldPigDetail* QueryGoldPigDetailResp::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::GoldPigProto::GoldPigDetail>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoldPigProto.QueryGoldPigDetailResp.data)
  return data_;
}
inline void QueryGoldPigDetailResp::set_allocated_data(::GoldPigProto::GoldPigDetail* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:GoldPigProto.QueryGoldPigDetailResp.data)
}

// -------------------------------------------------------------------

// PurchaseGoldPigResp

// sint32 resultCode = 1;
inline void PurchaseGoldPigResp::clear_resultcode() {
  resultcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PurchaseGoldPigResp::resultcode() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.PurchaseGoldPigResp.resultCode)
  return resultcode_;
}
inline void PurchaseGoldPigResp::set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.PurchaseGoldPigResp.resultCode)
}

// -------------------------------------------------------------------

// KnockGoldPigResp

// sint32 resultCode = 1;
inline void KnockGoldPigResp::clear_resultcode() {
  resultcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KnockGoldPigResp::resultcode() const {
  // @@protoc_insertion_point(field_get:GoldPigProto.KnockGoldPigResp.resultCode)
  return resultcode_;
}
inline void KnockGoldPigResp::set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:GoldPigProto.KnockGoldPigResp.resultCode)
}

// .GoldPigProto.GoldPigDetail data = 2;
inline bool KnockGoldPigResp::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline void KnockGoldPigResp::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::GoldPigProto::GoldPigDetail& KnockGoldPigResp::data() const {
  const ::GoldPigProto::GoldPigDetail* p = data_;
  // @@protoc_insertion_point(field_get:GoldPigProto.KnockGoldPigResp.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::GoldPigProto::GoldPigDetail*>(
      &::GoldPigProto::_GoldPigDetail_default_instance_);
}
inline ::GoldPigProto::GoldPigDetail* KnockGoldPigResp::release_data() {
  // @@protoc_insertion_point(field_release:GoldPigProto.KnockGoldPigResp.data)
  
  ::GoldPigProto::GoldPigDetail* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::GoldPigProto::GoldPigDetail* KnockGoldPigResp::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::GoldPigProto::GoldPigDetail>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GoldPigProto.KnockGoldPigResp.data)
  return data_;
}
inline void KnockGoldPigResp::set_allocated_data(::GoldPigProto::GoldPigDetail* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:GoldPigProto.KnockGoldPigResp.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GoldPigProto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_goldPig_2eproto
