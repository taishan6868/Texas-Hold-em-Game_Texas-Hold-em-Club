// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomDynamic.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_RoomDynamic_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_RoomDynamic_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_RoomDynamic_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_RoomDynamic_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_RoomDynamic_2eproto;
namespace RoomDynamicProto {
class GetTableListReq;
class GetTableListReqDefaultTypeInternal;
extern GetTableListReqDefaultTypeInternal _GetTableListReq_default_instance_;
class GetTableListResp;
class GetTableListRespDefaultTypeInternal;
extern GetTableListRespDefaultTypeInternal _GetTableListResp_default_instance_;
class TableItem;
class TableItemDefaultTypeInternal;
extern TableItemDefaultTypeInternal _TableItem_default_instance_;
}  // namespace RoomDynamicProto
PROTOBUF_NAMESPACE_OPEN
template<> ::RoomDynamicProto::GetTableListReq* Arena::CreateMaybeMessage<::RoomDynamicProto::GetTableListReq>(Arena*);
template<> ::RoomDynamicProto::GetTableListResp* Arena::CreateMaybeMessage<::RoomDynamicProto::GetTableListResp>(Arena*);
template<> ::RoomDynamicProto::TableItem* Arena::CreateMaybeMessage<::RoomDynamicProto::TableItem>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace RoomDynamicProto {

// ===================================================================

class GetTableListReq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoomDynamicProto.GetTableListReq) */ {
 public:
  GetTableListReq();
  virtual ~GetTableListReq();

  GetTableListReq(const GetTableListReq& from);
  GetTableListReq(GetTableListReq&& from) noexcept
    : GetTableListReq() {
    *this = ::std::move(from);
  }

  inline GetTableListReq& operator=(const GetTableListReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTableListReq& operator=(GetTableListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetTableListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableListReq* internal_default_instance() {
    return reinterpret_cast<const GetTableListReq*>(
               &_GetTableListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetTableListReq& a, GetTableListReq& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTableListReq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetTableListReq* New() const final {
    return CreateMaybeMessage<GetTableListReq>(nullptr);
  }

  GetTableListReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetTableListReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetTableListReq& from);
  void MergeFrom(const GetTableListReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableListReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoomDynamicProto.GetTableListReq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoomDynamic_2eproto);
    return ::descriptor_table_RoomDynamic_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomIdFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kCountFieldNumber = 3,
  };
  // string roomId = 1;
  void clear_roomid();
  const std::string& roomid() const;
  void set_roomid(const std::string& value);
  void set_roomid(std::string&& value);
  void set_roomid(const char* value);
  void set_roomid(const char* value, size_t size);
  std::string* mutable_roomid();
  std::string* release_roomid();
  void set_allocated_roomid(std::string* roomid);

  // sint32 offset = 2;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);

  // sint32 count = 3;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:RoomDynamicProto.GetTableListReq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr roomid_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoomDynamic_2eproto;
};
// -------------------------------------------------------------------

class TableItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoomDynamicProto.TableItem) */ {
 public:
  TableItem();
  virtual ~TableItem();

  TableItem(const TableItem& from);
  TableItem(TableItem&& from) noexcept
    : TableItem() {
    *this = ::std::move(from);
  }

  inline TableItem& operator=(const TableItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TableItem& operator=(TableItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TableItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TableItem* internal_default_instance() {
    return reinterpret_cast<const TableItem*>(
               &_TableItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TableItem& a, TableItem& b) {
    a.Swap(&b);
  }
  inline void Swap(TableItem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TableItem* New() const final {
    return CreateMaybeMessage<TableItem>(nullptr);
  }

  TableItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TableItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TableItem& from);
  void MergeFrom(const TableItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TableItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoomDynamicProto.TableItem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoomDynamic_2eproto);
    return ::descriptor_table_RoomDynamic_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 2,
    kSitidFieldNumber = 1,
  };
  // sint64 uid = 2;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::int64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::int64 value);

  // sint32 sitid = 1;
  void clear_sitid();
  ::PROTOBUF_NAMESPACE_ID::int32 sitid() const;
  void set_sitid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:RoomDynamicProto.TableItem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 sitid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoomDynamic_2eproto;
};
// -------------------------------------------------------------------

class GetTableListResp :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RoomDynamicProto.GetTableListResp) */ {
 public:
  GetTableListResp();
  virtual ~GetTableListResp();

  GetTableListResp(const GetTableListResp& from);
  GetTableListResp(GetTableListResp&& from) noexcept
    : GetTableListResp() {
    *this = ::std::move(from);
  }

  inline GetTableListResp& operator=(const GetTableListResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTableListResp& operator=(GetTableListResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetTableListResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTableListResp* internal_default_instance() {
    return reinterpret_cast<const GetTableListResp*>(
               &_GetTableListResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetTableListResp& a, GetTableListResp& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTableListResp* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetTableListResp* New() const final {
    return CreateMaybeMessage<GetTableListResp>(nullptr);
  }

  GetTableListResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetTableListResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetTableListResp& from);
  void MergeFrom(const GetTableListResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTableListResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RoomDynamicProto.GetTableListResp";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoomDynamic_2eproto);
    return ::descriptor_table_RoomDynamic_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kResultCodeFieldNumber = 1,
  };
  // repeated .RoomDynamicProto.TableItem data = 2;
  int data_size() const;
  void clear_data();
  ::RoomDynamicProto::TableItem* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RoomDynamicProto::TableItem >*
      mutable_data();
  const ::RoomDynamicProto::TableItem& data(int index) const;
  ::RoomDynamicProto::TableItem* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RoomDynamicProto::TableItem >&
      data() const;

  // sint32 resultCode = 1;
  void clear_resultcode();
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode() const;
  void set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:RoomDynamicProto.GetTableListResp)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RoomDynamicProto::TableItem > data_;
  ::PROTOBUF_NAMESPACE_ID::int32 resultcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoomDynamic_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetTableListReq

// string roomId = 1;
inline void GetTableListReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetTableListReq::roomid() const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.GetTableListReq.roomId)
  return roomid_.GetNoArena();
}
inline void GetTableListReq::set_roomid(const std::string& value) {
  
  roomid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoomDynamicProto.GetTableListReq.roomId)
}
inline void GetTableListReq::set_roomid(std::string&& value) {
  
  roomid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoomDynamicProto.GetTableListReq.roomId)
}
inline void GetTableListReq::set_roomid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  roomid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoomDynamicProto.GetTableListReq.roomId)
}
inline void GetTableListReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoomDynamicProto.GetTableListReq.roomId)
}
inline std::string* GetTableListReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:RoomDynamicProto.GetTableListReq.roomId)
  return roomid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetTableListReq::release_roomid() {
  // @@protoc_insertion_point(field_release:RoomDynamicProto.GetTableListReq.roomId)
  
  return roomid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetTableListReq::set_allocated_roomid(std::string* roomid) {
  if (roomid != nullptr) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:RoomDynamicProto.GetTableListReq.roomId)
}

// sint32 offset = 2;
inline void GetTableListReq::clear_offset() {
  offset_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetTableListReq::offset() const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.GetTableListReq.offset)
  return offset_;
}
inline void GetTableListReq::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:RoomDynamicProto.GetTableListReq.offset)
}

// sint32 count = 3;
inline void GetTableListReq::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetTableListReq::count() const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.GetTableListReq.count)
  return count_;
}
inline void GetTableListReq::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:RoomDynamicProto.GetTableListReq.count)
}

// -------------------------------------------------------------------

// TableItem

// sint32 sitid = 1;
inline void TableItem::clear_sitid() {
  sitid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TableItem::sitid() const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.TableItem.sitid)
  return sitid_;
}
inline void TableItem::set_sitid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sitid_ = value;
  // @@protoc_insertion_point(field_set:RoomDynamicProto.TableItem.sitid)
}

// sint64 uid = 2;
inline void TableItem::clear_uid() {
  uid_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TableItem::uid() const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.TableItem.uid)
  return uid_;
}
inline void TableItem::set_uid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:RoomDynamicProto.TableItem.uid)
}

// -------------------------------------------------------------------

// GetTableListResp

// sint32 resultCode = 1;
inline void GetTableListResp::clear_resultcode() {
  resultcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetTableListResp::resultcode() const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.GetTableListResp.resultCode)
  return resultcode_;
}
inline void GetTableListResp::set_resultcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:RoomDynamicProto.GetTableListResp.resultCode)
}

// repeated .RoomDynamicProto.TableItem data = 2;
inline int GetTableListResp::data_size() const {
  return data_.size();
}
inline void GetTableListResp::clear_data() {
  data_.Clear();
}
inline ::RoomDynamicProto::TableItem* GetTableListResp::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:RoomDynamicProto.GetTableListResp.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RoomDynamicProto::TableItem >*
GetTableListResp::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:RoomDynamicProto.GetTableListResp.data)
  return &data_;
}
inline const ::RoomDynamicProto::TableItem& GetTableListResp::data(int index) const {
  // @@protoc_insertion_point(field_get:RoomDynamicProto.GetTableListResp.data)
  return data_.Get(index);
}
inline ::RoomDynamicProto::TableItem* GetTableListResp::add_data() {
  // @@protoc_insertion_point(field_add:RoomDynamicProto.GetTableListResp.data)
  return data_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RoomDynamicProto::TableItem >&
GetTableListResp::data() const {
  // @@protoc_insertion_point(field_list:RoomDynamicProto.GetTableListResp.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RoomDynamicProto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_RoomDynamic_2eproto
